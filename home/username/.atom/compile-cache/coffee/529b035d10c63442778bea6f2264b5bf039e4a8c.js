(function() {
  describe('Bottom Container', function() {
    var BottomContainer, bottomContainer, trigger;
    BottomContainer = require('../../lib/ui/bottom-container');
    bottomContainer = null;
    trigger = require('../common').trigger;
    beforeEach(function() {
      return waitsForPromise(function() {
        return atom.packages.activatePackage('linter').then(function() {
          if (bottomContainer != null) {
            bottomContainer.dispose();
          }
          return bottomContainer = BottomContainer.create('File');
        });
      });
    });
    describe('::getTab', function() {
      return it('returns HTMLElements of tabs', function() {
        expect(bottomContainer.getTab('File') instanceof HTMLElement).toBe(true);
        expect(bottomContainer.getTab('Line') instanceof HTMLElement).toBe(true);
        expect(bottomContainer.getTab('Project') instanceof HTMLElement).toBe(true);
        return expect(bottomContainer.getTab('a') instanceof HTMLElement).toBe(false);
      });
    });
    describe('::setCount', function() {
      return it('updates count on underlying HTMLElements', function() {
        bottomContainer.setCount({
          Project: 1,
          File: 2,
          Line: 3
        });
        bottomContainer.iconScope = 'File';
        expect(bottomContainer.getTab('Project').count).toBe(1);
        expect(bottomContainer.getTab('File').count).toBe(2);
        return expect(bottomContainer.getTab('Line').count).toBe(3);
      });
    });
    describe('::{set, get}ActiveTab', function() {
      return it('works', function() {
        expect(bottomContainer.getTab('File').active).toBe(true);
        expect(bottomContainer.getTab('Line').active).toBe(false);
        expect(bottomContainer.getTab('Project').active).toBe(false);
        expect(bottomContainer.activeTab).toBe('File');
        bottomContainer.activeTab = 'Line';
        expect(bottomContainer.getTab('File').active).toBe(false);
        expect(bottomContainer.getTab('Line').active).toBe(true);
        expect(bottomContainer.getTab('Project').active).toBe(false);
        expect(bottomContainer.activeTab).toBe('Line');
        bottomContainer.activeTab = 'Project';
        expect(bottomContainer.getTab('File').active).toBe(false);
        expect(bottomContainer.getTab('Line').active).toBe(false);
        expect(bottomContainer.getTab('Project').active).toBe(true);
        expect(bottomContainer.activeTab).toBe('Project');
        bottomContainer.activeTab = 'File';
        expect(bottomContainer.activeTab).toBe('File');
        expect(bottomContainer.getTab('File').active).toBe(true);
        expect(bottomContainer.getTab('Line').active).toBe(false);
        return expect(bottomContainer.getTab('Project').active).toBe(false);
      });
    });
    describe('::{get, set}Visibility', function() {
      return it('manages element visibility', function() {
        bottomContainer.visibility = false;
        expect(bottomContainer.visibility).toBe(false);
        expect(bottomContainer.hasAttribute('hidden')).toBe(true);
        bottomContainer.visibility = true;
        expect(bottomContainer.visibility).toBe(true);
        return expect(bottomContainer.hasAttribute('hidden')).toBe(false);
      });
    });
    describe('::onDidChangeTab', function() {
      return it('is triggered when tab is changed', function() {
        var listener;
        listener = jasmine.createSpy('onDidChangeTab');
        bottomContainer.onDidChangeTab(listener);
        trigger(bottomContainer.getTab('File'), 'click');
        expect(listener).not.toHaveBeenCalled();
        trigger(bottomContainer.getTab('Project'), 'click');
        expect(listener).toHaveBeenCalledWith('Project');
        trigger(bottomContainer.getTab('File'), 'click');
        expect(listener).toHaveBeenCalledWith('File');
        trigger(bottomContainer.getTab('Line'), 'click');
        return expect(listener).toHaveBeenCalledWith('Line');
      });
    });
    describe('::onShouldTogglePanel', function() {
      return it('is triggered when active tab is clicked', function() {
        var listener;
        listener = jasmine.createSpy('onShouldTogglePanel');
        bottomContainer.onShouldTogglePanel(listener);
        trigger(bottomContainer.getTab('Project'), 'click');
        expect(listener).not.toHaveBeenCalled();
        trigger(bottomContainer.getTab('Project'), 'click');
        return expect(listener).toHaveBeenCalled();
      });
    });
    describe('::visibility', function() {
      return it('depends on displayLinterInfo', function() {
        atom.config.set('linter.displayLinterInfo', true);
        bottomContainer.visibility = true;
        expect(bottomContainer.visibility).toBe(true);
        atom.config.set('linter.displayLinterInfo', false);
        expect(bottomContainer.visibility).toBe(false);
        bottomContainer.visibility = true;
        expect(bottomContainer.visibility).toBe(false);
        atom.config.set('linter.displayLinterInfo', true);
        bottomContainer.visibility = true;
        expect(bottomContainer.visibility).toBe(true);
        bottomContainer.visibility = false;
        return expect(bottomContainer.visibility).toBe(false);
      });
    });
    return describe('.status::visibility', function() {
      return it('depends on displayLinterStatus', function() {
        atom.config.set('linter.displayLinterStatus', true);
        expect(bottomContainer.status.visibility).toBe(true);
        atom.config.set('linter.displayLinterStatus', false);
        expect(bottomContainer.status.visibility).toBe(false);
        atom.config.set('linter.displayLinterStatus', true);
        return expect(bottomContainer.status.visibility).toBe(true);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,

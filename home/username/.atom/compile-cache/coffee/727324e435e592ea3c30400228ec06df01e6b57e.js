(function() {
  var PaneMove;

  PaneMove = require('../lib/pane-move');

  describe("PaneMove:", function() {
    beforeEach(function() {
      return waitsForPromise(function() {
        atom.workspace.open('foo.txt');
        return atom.workspace.open('bar.txt');
      });
    });
    it('should allow panes to be moved right in a multicolumn layout', function() {
      var panes;
      panes = atom.workspace.getPanes();
      panes[0].splitRight();
      panes[0].activate();
      panes = atom.workspace.getPanes();
      expect(panes[0].getItems().length).toBe(2);
      expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
      PaneMove.moveRight();
      panes[1].activate();
      expect(panes[0].getItems().length).toBe(1);
      expect(panes[1].getItems().length).toBe(1);
      expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
      panes[0].activate();
      PaneMove.moveRight();
      expect(panes[1].getItems().length).toBe(2);
      return expect(atom.workspace.getActivePaneItem().getTitle()).toBe('foo.txt');
    });
    it('should allow panes to be moved left in a multicolumn layout', function() {
      var panes;
      panes = atom.workspace.getPanes();
      panes[0].splitLeft();
      panes[0].activate();
      panes = atom.workspace.getPanes();
      expect(panes[1].getItems().length).toBe(2);
      expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
      PaneMove.moveLeft();
      panes[0].activate();
      expect(panes[0].getItems().length).toBe(1);
      expect(panes[1].getItems().length).toBe(1);
      expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
      panes[1].activate();
      PaneMove.moveLeft();
      expect(panes[0].getItems().length).toBe(2);
      return expect(atom.workspace.getActivePaneItem().getTitle()).toBe('foo.txt');
    });
    it('should not allow panes to be moved left when it is the first pane', function() {
      var panes;
      panes = atom.workspace.getPanes();
      panes[0].splitRight();
      panes[0].activate();
      panes = atom.workspace.getPanes();
      expect(panes[0].getItems().length).toBe(2);
      expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
      PaneMove.moveRight();
      PaneMove.moveRight();
      panes[1].activate();
      expect(panes[0].getItems().length).toBe(1);
      expect(panes[1].getItems().length).toBe(1);
      return expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
    });
    return it('should not allow panes to be moved right when it is the last pane', function() {
      var panes;
      panes = atom.workspace.getPanes();
      panes[0].splitLeft();
      panes[0].activate();
      panes = atom.workspace.getPanes();
      expect(panes[1].getItems().length).toBe(2);
      expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
      PaneMove.moveLeft();
      PaneMove.moveLeft();
      panes[0].activate();
      expect(panes[0].getItems().length).toBe(1);
      expect(panes[1].getItems().length).toBe(1);
      return expect(atom.workspace.getActivePaneItem().getTitle()).toBe('bar.txt');
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,
